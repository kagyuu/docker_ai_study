FROM nvidia/cuda:11.4.1-devel-ubuntu20.04

# To avoid the command prompt for the timezon setting
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=ETC/UTC 

# Add 3rd party's apt repositiories.
RUN apt-get update \
&& yes | unminimize \
&& apt-get -y upgrade \
&& apt-get -y install apt-utils curl wget lsb-release \
&& apt-get clean \
&& rm -rf /var/lib/apt/lists/*

RUN curl -fsSL https://deb.nodesource.com/setup_16.x | bash -

RUN echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list
RUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -

# Unminimize Ubuntu image.
RUN apt-get update \
&& apt-get -y install vim iputils-ping iproute2 git sudo htop \
openssh-server \
python3 python3-venv python3-pip python3-dev swig \
default-jdk maven ant gradle \
nodejs postgresql-client \
libreadline-gplv2-dev libncursesw5-dev libsqlite3-dev tk-dev libgdbm-dev libgdbm-compat-dev \
libbz2-dev libssl-dev libsqlite3-dev libffi-dev liblzma-dev libpq-dev \
&& apt-get clean \
&& rm -rf /var/lib/apt/lists/*

RUN npm install -g npm && npm install -g yarn sort-package-json npm-check-updates typescript ts-node tslab

#####
# Install Openssh
RUN mkdir -p /var/run/sshd && sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config

# SSH login fix. Otherwise user is kicked off after login
RUN sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd

#####
# Install Poetry
RUN curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python3 - 
RUN echo "export PATH=$PATH:/root/.local/bin" >> /root/.bashrc
RUN mkdir -p /etc/bash_completion.d/ && /root/.local/bin/poetry completions bash > /etc/bash_completion.d/poetry.bash-completion

#####
# Build Python 3.10 from its source.
RUN cd /root \
&& yes | git clone https://github.com/python/cpython.git -b 3.10 \
&& cd cpython \
&& ./configure --enable-optimizations | tee configure.log \
&& make -j$(nproc) | tee build.log \
&& make altinstall

ARG USER=aichan
ARG PASSWD=passwd
RUN groupadd -g 5000 ${USER} && useradd -m -s /bin/bash ${USER} -u 5000 -g 5000 && gpasswd -a ${USER} sudo
RUN echo "${USER}:${PASSWD}" | sudo chpasswd

EXPOSE 22
CMD mkdir -p /home/aichan/.ssh && \
    cat /run/secrets/user_ssh_pub >> /home/aichan/.ssh/authorized_keys && \
    chmod 0600 /home/aichan/.ssh/authorized_keys &&  \
    cp /run/secrets/user_git_config /home/aichan/.ssh/config &&  \
    cp /run/secrets/user_git_key /home/aichan/.ssh/id_rsa.github &&  \
    chown -R aichan:aichan /home/aichan/.ssh && \
    /usr/sbin/sshd -D
